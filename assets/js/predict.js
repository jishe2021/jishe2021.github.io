const exsiting = [[0, 10, 273, 262, 316, 293, 241], [1, 10, 140, 104, 95, 123, 136], [2, 10, 223, 273, 286, 257, 308], [3, 10, 218, 270, 215, 230, 273], [4, 10, 516, 454, 521, 501, 451], [5, 10, 352, 316, 275, 325, 310], [6, 10, 345, 300, 218, 288, 246], [7, 10, 1135, 1080, 1050, 1045, 1063], [8, 10, 534, 605, 628, 581, 501], [9, 10, 1354, 1461, 1426, 1387, 1419], [10, 10, 605, 605, 714, 643, 571], [11, 10, 525, 611, 573, 627, 608], [12, 10, 584, 504, 518, 513, 491], [13, 10, 395, 416, 442, 408, 354], [14, 10, 391, 411, 372, 354, 412], [15, 10, 2368, 2393, 2732, 2721, 2751], [16, 10, 455, 375, 434, 326, 347], [17, 10, 118, 79, 108, 98, 107],
    [18, 10, 254, 206, 207, 217, 238], [19, 10, 180, 174, 189, 157, 158], [20, 10, 560, 507, 666, 588, 560], [21, 10, 95, 72, 108, 83, 94], [22, 10, 411, 336, 306, 474, 377], [23, 10, 185, 184, 162, 148, 179], [24, 10, 274, 293, 327, 250, 298], [25, 10, 232, 167, 217, 247, 150], [26, 10, 198, 189, 171, 219, 179], [27, 10, 198, 164, 201, 129, 173], [28, 10, 87, 63, 74, 66, 58], [29, 10, 145, 185, 263, 196, 220], [30, 10, 170, 131, 137, 187, 160], [31, 10, 87, 80, 65, 79, 61], [32, 10, 125, 98, 142, 103, 102], [33, 10, 547, 478, 407, 479, 460], [34, 10, 182, 159, 167, 137, 131], [35, 10, 85, 84, 67, 92, 66], [36, 10, 111, 116, 124, 106, 90],
    [37, 10, 246, 192, 247, 216, 204], [38, 10, 230, 234, 242, 291, 225], [39, 10, 230, 255, 250, 266, 242], [40, 10, 114, 95, 109, 84, 82], [41, 10, 136, 134, 145, 117, 147], [42, 10, 227, 198, 210, 211, 197], [43, 10, 156, 155, 181, 175, 136], [44, 10, 106, 108, 122, 78, 111], [45, 10, 138, 151, 132, 210, 190], [46, 10, 268, 251, 248, 252, 251], [47, 10, 354, 325, 394, 329, 364], [48, 10, 268, 251, 280, 300, 225], [49, 10, 252, 273, 253, 265, 243], [50, 10, 211, 226, 251, 247, 222], [51, 10, 269, 261, 319, 356, 275], [52, 10, 297, 283, 307, 281, 302], [53, 10, 307, 252, 232, 244, 243], [55, 10, 245, 256, 274, 227, 254], [56, 10, 301, 353, 261, 321, 286],
    [57, 10, 327, 343, 319, 254, 285], [58, 10, 289, 303, 232, 283, 279], [59, 10, 263, 245, 234, 239, 222], [60, 10, 215, 271, 221, 192, 207], [61, 10, 224, 214, 224, 190, 212], [62, 10, 212, 180, 195, 253, 177], [63, 10, 194, 206, 197, 216, 201], [64, 10, 90, 86, 84, 98, 91], [65, 10, 248, 178, 179, 218, 204], [66, 10, 167, 153, 116, 154, 101], [67, 10, 107, 157, 146, 127, 117], [68, 10, 88, 115, 91, 80, 80], [69, 10, 113, 152, 120, 199, 139], [70, 10, 133, 175, 171, 142, 206], [71, 10, 144, 189, 169, 124, 118], [72, 10, 71, 71, 53, 78, 56], [73, 10, 135, 145, 137, 153, 156], [74, 10, 62, 47, 56, 51, 58], [75, 10, 110, 129, 106, 90, 104],
    [76, 10, 260, 313, 272, 336, 313], [77, 10, 209, 156, 215, 176, 224], [78, 10, 235, 248, 253, 268, 246], [79, 10, 140, 150, 99, 111, 121], [80, 10, 65, 57, 74, 60, 70], [0, 20, 585, 580, 535, 609, 445], [1, 20, 248, 257, 244, 218, 231], [2, 20, 633, 603, 496, 543, 582], [3, 20, 461, 473, 488, 445, 486], [4, 20, 1065, 937, 970, 1022, 905], [5, 20, 746, 670, 668, 600, 654], [6, 20, 563, 522, 645, 506, 495], [7, 20, 2381, 2193, 2215, 2095, 2205], [8, 20, 1025, 1027, 1139, 1209, 1193], [9, 20, 2509, 2256, 2815, 2813, 2757], [10, 20, 1171, 1240, 1210, 1357, 1316], [11, 20, 1064, 1011, 1136, 1200, 1249], [12, 20, 1200, 1080, 1088, 1031, 1044],
    [13, 20, 844, 752, 811, 850, 777], [14, 20, 799, 739, 802, 726, 770], [15, 20, 4721, 5272, 4761, 5453, 5086], [16, 20, 715, 719, 830, 760, 700], [17, 20, 237, 209, 197, 206, 204], [18, 20, 502, 453, 460, 424, 428], [19, 20, 393, 353, 354, 346, 318], [20, 20, 1206, 1074, 1067, 1254, 1179], [21, 20, 241, 217, 167, 191, 220], [22, 20, 702, 579, 747, 780, 693], [23, 20, 309, 339, 369, 310, 315], [24, 20, 585, 651, 567, 577, 657], [25, 20, 446, 416, 399, 464, 322], [26, 20, 345, 362, 387, 390, 336], [27, 20, 377, 344, 362, 330, 330], [28, 20, 158, 123, 150, 140, 127], [29, 20, 300, 437, 330, 459, 400], [30, 20, 316, 247, 301, 324, 296],
    [31, 20, 172, 191, 167, 144, 144], [32, 20, 282, 262, 223, 245, 259], [33, 20, 1094, 1001, 1025, 886, 817], [34, 20, 336, 354, 341, 304, 267], [35, 20, 148, 130, 169, 159, 124], [36, 20, 304, 284, 227, 230, 227], [37, 20, 454, 473, 438, 463, 415], [38, 20, 464, 509, 464, 533, 455], [39, 20, 495, 458, 485, 516, 475], [40, 20, 193, 205, 209, 193, 208], [41, 20, 318, 311, 270, 262, 325], [42, 20, 438, 374, 425, 421, 404], [43, 20, 378, 332, 311, 356, 281], [44, 20, 296, 223, 214, 200, 208], [45, 20, 354, 297, 289, 342, 386], [46, 20, 658, 566, 519, 500, 547], [47, 20, 796, 703, 679, 723, 651], [48, 20, 637, 578, 519, 580, 528], [49, 20, 613, 588, 525, 518, 474],
    [50, 20, 476, 489, 437, 498, 433], [51, 20, 535, 538, 530, 675, 529], [52, 20, 648, 581, 580, 588, 545], [53, 20, 568, 524, 559, 476, 509], [55, 20, 511, 440, 501, 501, 488], [56, 20, 606, 673, 654, 582, 566], [57, 20, 617, 600, 670, 573, 565], [58, 20, 599, 533, 592, 515, 513], [59, 20, 545, 509, 508, 473, 449], [60, 20, 423, 424, 486, 413, 400], [61, 20, 432, 433, 438, 414, 400], [62, 20, 492, 472, 392, 448, 384], [63, 20, 412, 460, 400, 413, 368], [64, 20, 186, 171, 176, 182, 216], [65, 20, 435, 398, 426, 397, 382], [66, 20, 327, 318, 320, 270, 218], [67, 20, 361, 312, 264, 273, 233], [68, 20, 180, 157, 203, 171, 163], [69, 20, 322, 367, 265, 319, 296],
    [70, 20, 350, 353, 308, 313, 376], [71, 20, 256, 291, 333, 293, 271], [72, 20, 115, 143, 142, 131, 123], [73, 20, 353, 308, 280, 290, 297], [74, 20, 115, 115, 109, 107, 131], [75, 20, 320, 228, 239, 196, 180], [76, 20, 587, 575, 573, 608, 623], [77, 20, 464, 300, 365, 391, 418], [78, 20, 595, 522, 483, 521, 472], [79, 20, 292, 251, 290, 210, 229], [80, 20, 126, 99, 122, 134, 128], [0, 30, 989, 894, 853, 871, 705], [1, 30, 448, 394, 397, 322, 359], [2, 30, 1069, 953, 826, 816, 859], [3, 30, 790, 704, 691, 715, 713], [4, 30, 1809, 1573, 1453, 1476, 1399], [5, 30, 1061, 1112, 1022, 916, 1000], [6, 30, 835, 838, 867, 806, 758], [7, 30, 3334, 3644, 3328, 3175, 3440],
    [8, 30, 1486, 1531, 1561, 1814, 1744], [9, 30, 3173, 3618, 3610, 4274, 4204], [10, 30, 1673, 1811, 1845, 1962, 2036], [11, 30, 1895, 1634, 1536, 1811, 1851], [12, 30, 1548, 1724, 1664, 1535, 1559], [13, 30, 1290, 1227, 1147, 1266, 1104], [14, 30, 1292, 1239, 1130, 1137, 1120], [15, 30, 7581, 7287, 7640, 7846, 7526], [16, 30, 1401, 1195, 1174, 1135, 1008], [17, 30, 372, 344, 327, 285, 286], [18, 30, 917, 748, 707, 630, 623], [19, 30, 546, 605, 533, 520, 492], [20, 30, 1833, 1759, 1634, 1761, 1839], [21, 30, 438, 359, 312, 263, 315], [22, 30, 1086, 996, 990, 1116, 1105], [23, 30, 551, 508, 524, 494, 491], [24, 30, 844, 827, 925, 870, 911], [25, 30, 621, 603, 648, 631, 530],
    [26, 30, 630, 570, 560, 579, 498], [27, 30, 647, 557, 542, 494, 508], [28, 30, 222, 227, 210, 203, 280], [29, 30, 575, 494, 582, 644, 571], [30, 30, 431, 455, 417, 455, 445], [31, 30, 234, 295, 278, 224, 197], [32, 30, 402, 404, 387, 343, 371], [33, 30, 1615, 1546, 1548, 1364, 1382], [34, 30, 581, 513, 536, 463, 389], [35, 30, 253, 241, 215, 243, 197], [36, 30, 402, 420, 395, 346, 337], [37, 30, 690, 666, 719, 655, 608], [38, 30, 641, 703, 739, 767, 726], [39, 30, 706, 739, 688, 771, 713], [40, 30, 377, 311, 319, 288, 318], [41, 30, 506, 498, 447, 396, 469], [42, 30, 825, 686, 601, 619, 578], [43, 30, 585, 555, 488, 511, 396], [44, 30, 477, 430, 329, 308, 306],
    [45, 30, 578, 549, 435, 493, 516], [46, 30, 1050, 962, 834, 751, 811], [47, 30, 1169, 1257, 1057, 1048, 1017], [48, 30, 874, 907, 846, 831, 821], [49, 30, 871, 912, 840, 791, 710], [50, 30, 611, 723, 700, 724, 646], [51, 30, 761, 783, 807, 936, 861], [52, 30, 971, 996, 878, 871, 840], [53, 30, 1018, 915, 831, 728, 757], [55, 30, 922, 771, 685, 757, 761], [56, 30, 1024, 963, 974, 935, 846], [57, 30, 1017, 906, 927, 916, 863], [58, 30, 769, 902, 822, 818, 741], [59, 30, 950, 860, 772, 718, 709], [60, 30, 765, 612, 639, 684, 606], [61, 30, 747, 661, 657, 628, 592], [62, 30, 750, 743, 684, 628, 561], [63, 30, 702, 625, 654, 619, 564], [64, 30, 333, 290, 261, 268, 295],
    [65, 30, 582, 600, 646, 575, 540], [66, 30, 527, 514, 485, 423, 359], [67, 30, 402, 503, 419, 430, 368], [68, 30, 254, 264, 245, 286, 257], [69, 30, 528, 499, 480, 471, 424], [70, 30, 577, 539, 486, 488, 555], [71, 30, 437, 371, 435, 482, 431], [72, 30, 226, 192, 214, 202, 198], [73, 30, 577, 557, 443, 435, 436], [74, 30, 175, 173, 177, 154, 178], [75, 30, 533, 446, 338, 325, 297], [76, 30, 757, 893, 835, 921, 905], [77, 30, 806, 673, 509, 547, 669], [78, 30, 950, 912, 757, 769, 708], [79, 30, 394, 417, 391, 360, 362], [80, 30, 239, 212, 164, 191, 205]]

const warning = [[0, 246, 431, 493], [1, 150, 264, 301], [2, 411, 719, 822], [3, 303, 530, 606], [4, 792, 1386, 1585], [5, 471, 825, 943], [6, 241, 421, 482], [7, 804, 1408, 1609], [8, 572, 1002, 1145], [9, 1208, 2114, 2416], [10, 667, 1168, 1335], [11, 636, 1114, 1273], [12, 597, 1046, 1195], [13, 498, 871, 996], [14, 474, 829, 948], [15, 2201, 3853, 4403],
    [16, 514, 899, 1028], [17, 165, 289, 331], [18, 383, 671, 767], [19, 236, 413, 472], [20, 600, 1051, 1201],
    [21, 151, 265, 302], [22, 524, 917, 1048], [23, 245, 429, 490], [24, 445, 779, 891], [25, 369, 646, 738], [26, 231, 404, 462],
    [27, 209, 366, 419], [28, 100, 175, 200], [29, 244, 428, 489], [30, 187, 328, 374], [31, 97, 169, 194], [32, 185, 325, 371],
    [33, 527, 922, 1054], [34, 174, 305, 349], [35, 101, 178, 203], [36, 142, 250, 285], [37, 247, 433, 495], [38, 261, 458, 523],
    [39, 290, 509, 581], [40, 147, 257, 294], [41, 230, 402, 460], [42, 293, 513, 587], [43, 238, 416, 476], [44, 237, 416, 475],
    [45, 273, 478, 546], [46, 443, 776, 887], [47, 388, 680, 777], [48, 265, 465, 531], [49, 342, 599, 685], [50, 286, 501, 572],
    [51, 291, 509, 582], [52, 351, 614, 702], [53, 413, 722, 826], [53, 413, 722, 826], [55, 367, 643, 735], [56, 434, 760, 869],
    [57, 367, 642, 734], [58, 323, 565, 646], [59, 330, 577, 660], [60, 238, 418, 477], [61, 263, 461, 527], [62, 254, 445, 509],
    [63, 266, 466, 533], [64, 122, 214, 245], [65, 200, 351, 401], [66, 145, 255, 291], [67, 154, 270, 309], [68, 145, 254, 290],
    [69, 234, 411, 469], [70, 226, 395, 452], [71, 152, 267, 305], [72, 93, 163, 186], [73, 252, 442, 505], [74, 73, 129, 147],
    [75, 298, 523, 597], [76, 371, 649, 742], [77, 335, 586, 670], [78, 388, 679, 777], [79, 144, 252, 288], [80, 107, 188, 215]]

const pre =[[0, 10, 241], [0, 20, 445], [0, 30, 705], [1, 10, 136], [1, 20, 231], [1, 30, 359], [2, 10, 308], [2, 20, 582], [2, 30, 859],
    [3, 10, 273], [3, 20, 486], [3, 30, 713], [4, 10, 451], [4, 20, 905], [4, 30, 1399], [5, 10, 310], [5, 20, 654], [5, 30, 1000], [6, 10, 246],
    [6, 20, 495], [6, 30, 758], [7, 10, 1063], [7, 20, 2205], [7, 30, 3440], [8, 10, 501], [8, 20, 1193], [8, 30, 1744], [9, 10, 1419],
    [9, 20, 2757], [9, 30, 4204], [10, 10, 571], [10, 20, 1316], [10, 30, 2036], [11, 10, 608], [11, 20, 1249], [11, 30, 1851], [12, 10, 491],
    [12, 20, 1044], [12, 30, 1559], [13, 10, 354], [13, 20, 777], [13, 30, 1104], [14, 10, 412], [14, 20, 770], [14, 30, 1120], [15, 10, 2751],
    [15, 20, 5086], [15, 30, 7526], [16, 10, 347], [16, 20, 700], [16, 30, 1008], [17, 10, 107], [17, 20, 204], [17, 30, 286], [18, 10, 238],
    [18, 20, 428], [18, 30, 623], [19, 10, 158], [19, 20, 318], [19, 30, 492], [20, 10, 560], [20, 20, 1179], [20, 30, 1839], [21, 10, 94],
    [21, 20, 220], [21, 30, 315], [22, 10, 377], [22, 20, 693], [22, 30, 1105], [23, 10, 179], [23, 20, 315], [23, 30, 491], [24, 10, 298],
    [24, 20, 657], [24, 30, 911], [25, 10, 150], [25, 20, 322], [25, 30, 530], [26, 10, 179], [26, 20, 336], [26, 30, 498], [27, 10, 173],
    [27, 20, 330], [27, 30, 508], [28, 10, 58], [28, 20, 127], [28, 30, 280], [29, 10, 220], [29, 20, 400], [29, 30, 571], [30, 10, 160],
    [30, 20, 296], [30, 30, 445], [31, 10, 61], [31, 20, 144], [31, 30, 197], [32, 10, 102], [32, 20, 259], [32, 30, 371], [33, 10, 460],
    [33, 20, 817], [33, 30, 1382], [34, 10, 131], [34, 20, 267], [34, 30, 389], [35, 10, 66], [35, 20, 124], [35, 30, 197], [36, 10, 90],
    [36, 20, 227], [36, 30, 337], [37, 10, 204], [37, 20, 415], [37, 30, 608], [38, 10, 225], [38, 20, 455], [38, 30, 726], [39, 10, 242],
    [39, 20, 475], [39, 30, 713], [40, 10, 82], [40, 20, 208], [40, 30, 318], [41, 10, 147], [41, 20, 325], [41, 30, 469], [42, 10, 197],
    [42, 20, 404], [42, 30, 578], [43, 10, 136], [43, 20, 281], [43, 30, 396], [44, 10, 111], [44, 20, 208], [44, 30, 306], [45, 10, 190],
    [45, 20, 386], [45, 30, 516], [46, 10, 251], [46, 20, 547], [46, 30, 811], [47, 10, 364], [47, 20, 651], [47, 30, 1017], [48, 10, 225],
    [48, 20, 528], [48, 30, 821], [49, 10, 243], [49, 20, 474], [49, 30, 710], [50, 10, 222], [50, 20, 433], [50, 30, 646], [51, 10, 275],
    [51, 20, 529], [51, 30, 861], [52, 10, 302], [52, 20, 545], [52, 30, 840], [53, 10, 243], [53, 20, 509], [53, 30, 757], [54, 10], [54, 20],
    [54, 30], [55, 10, 254], [55, 20, 488], [55, 30, 761], [56, 10, 286], [56, 20, 566], [56, 30, 846], [57, 10, 285], [57, 20, 565], [57, 30, 863],
    [58, 10, 279], [58, 20, 513], [58, 30, 741], [59, 10, 222], [59, 20, 449], [59, 30, 709], [60, 10, 207], [60, 20, 400], [60, 30, 606],
    [61, 10, 212], [61, 20, 400], [61, 30, 592], [62, 10, 177], [62, 20, 384], [62, 30, 561], [63, 10, 201], [63, 20, 368], [63, 30, 564],
    [64, 10, 91], [64, 20, 216], [64, 30, 295], [65, 10, 204], [65, 20, 382], [65, 30, 540], [66, 10, 101], [66, 20, 218], [66, 30, 359],
    [67, 10, 117], [67, 20, 233], [67, 30, 368], [68, 10, 80], [68, 20, 163], [68, 30, 257], [69, 10, 139], [69, 20, 296], [69, 30, 424],
    [70, 10, 206], [70, 20, 376], [70, 30, 555], [71, 10, 118], [71, 20, 271], [71, 30, 431], [72, 10, 56], [72, 20, 123], [72, 30, 198],
    [73, 10, 156], [73, 20, 297], [73, 30, 436], [74, 10, 58], [74, 20, 131], [74, 30, 178], [75, 10, 104], [75, 20, 180], [75, 30, 297],
    [76, 10, 313], [76, 20, 623], [76, 30, 905], [77, 10, 224], [77, 20, 418], [77, 30, 669], [78, 10, 246], [78, 20, 472], [78, 30, 708],
    [79, 10, 121], [79, 20, 229], [79, 30, 362], [80, 10, 70], [80, 20, 128], [80, 30, 205]]

window.onload=function() {
    var station = document.getElementById("sta");
    var time2 = document.getElementById("timeCut");
    //var t = document.getElementById("time");
    var t2 = document.getElementById("ttt");
    var p1 = document.getElementById("pre10");
    var p2 = document.getElementById("pre20");
    var p3 = document.getElementById("pre30");
    var b = document.getElementById("butt");

    b.onclick = function () {
        var sta = station.value;
        var statype = Number(sta);
        var ti = time2.value;
        var timetype = Number(ti);
        var e1,e2,e3,e4,pre_now;
        var w1,w2,w3;

        var pre10,pre20,pre30;
        console.log(statype)
        console.log(timetype)

        for (var i=0;i<exsiting.length;i++)
        {
            if(exsiting[i][0]==statype && exsiting[i][1]==timetype){
                e1=exsiting[i][2];
                e2=exsiting[i][3];
                e3=exsiting[i][4];
                e4=exsiting[i][5];
                pre_now=exsiting[i][6];
                break;
            }
        }
        console.log(pre_now)
        for (var j=0;j<warning.length;j++)
        {
            if(warning[j][0] == statype){
                if(timetype == 10){
                    w1 = warning[j][1];
                    w2 = warning[j][2];
                    w3 = warning[j][3];
                    console.log(10)
                }
                else if(timetype == 20){
                    w1 = warning[j][1] *2;
                    w2 = warning[j][2] *2;
                    w3 = warning[j][3] *2;
                    console.log(20)
                }
                else if(timetype == 30){
                    w1 = warning[j][1]*3;
                    w2 = warning[j][2]*3;
                    w3 = warning[j][3]*3;
                    console.log(30)
                }
                break;
            }
        }
        console.log(w1)
        console.log(w2)
        console.log(w3)
        pre10 = pre[statype*3][2];
        pre20 = pre[statype*3+1][2];
        pre30 = pre[statype*3+2][2];
        let xd = ["前四个时刻","前三个时刻","前两个时刻","前一个时刻","预测本时刻"];
        let yd = [e1,e2,e3,e4,pre_now];
        t2.innerText = '接下来'+time2.value +'min客流预测';
        p1.innerText = pre_now;
		if (pre_now < w1){
			p1.style.backgroundColor='#90ed7d';
		}
		else if(pre_now < w2){
			p1.style.backgroundColor='#7cb5ec';
		}
		else if(pre_now < w3){
			p1.style.backgroundColor='#f7a35c';
		}
		else{
			p1.style.backgroundColor='#f2003c';
		}
        //p2.innerText = pre20
        //p3.innerText = pre30
        //ala1 = response["data"]["alarm"]//预警
        let ymin1 = Math.min.apply(null, yd);
        let chart;
        $(document).ready(function() {
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'containerP',
                    type: 'spline'
                },
                title: {
                    text:"sta"+sta+ " "+timetype+'分钟客流预测'
                },
                yAxis: {
                    title: {
                        text: '预期客流'
                    },
                    min: ymin1
                },
                tooltip: {
                    formatter: function() {
                        return '<b>'+ this.series.name +'</b>'+': '+ this.y +' 人次';
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },
                plotOptions: {
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                    }
                },
                xAxis:[{
                    categories:xd
                }],
                series: [{
                    name: '预测客流',
                    data: yd ,
                    zones:[{
                        value: w1,
                        color: '#90ed7d',
                    },
                        {
                            value: w2,
                            color: '#7cb5ec',
                        },
                        {
                            value: w3,
                            color: '#f7a35c'
                        },{
                            color: 'red',
                            dashStyle: 'dot'
                        },]}],

                responsive: {
                    rules: [{
                        condition: {
                            maxWidth: 500
                        },
                        chartOptions: {
                            legend: {
                                layout: 'horizontal',
                                align: 'center',
                                verticalAlign: 'bottom'
                            }
                        }
                    }]
                }

            });

        });
    }
    // bPre.onclick = function () {
    //     var s = station.value;
    //     var d = time2.value;
    //     let config = {
    //         headers: { "Content-Type": "multipart/form-data" }
    //     };
    //     axios.post('http://127.0.0.1:5000/predict', Qs.stringify({
    //         station: s,
    //         type: d ,
    //     }),config)
    //         .then(function (response) {
    //             console.log(response);
    //             console.log(response["data"]["d"]);
    //             var xd = response["data"]["x"];
    //             var yd = response["data"]["y"];
    //             t.innerText = time2.value +'min'
    //             p1.innerText =response["data"]["pre_10"]
    //             p2.innerText = response["data"]["pre_20"]
    //             p3.innerText = response["data"]["pre_30"]
    //             //ala1 = response["data"]["alarm"]//预警
    //             var ymin1 = Math.min.apply(null, yd);
    //             var chart;
    //             $(document).ready(function() {
    //                 chart = new Highcharts.Chart({
    //                     chart: {
    //                         renderTo: 'containerP',
    //                         type: 'spline'
    //                     },
    //                     title: {
    //                         text:s+'客流预测'
    //                     },
    //                     yAxis: {
    //                         title: {
    //                             text: '预期客流'
    //                         },
    //                         min: ymin1
    //                     },
    //                     tooltip: {
    //                         formatter: function() {
    //                             return '<b>'+ this.series.name +'</b>'+': '+ this.y +' 人次';
    //                         }
    //                     },
    //                     legend: {
    //                         layout: 'vertical',
    //                         align: 'right',
    //                         verticalAlign: 'middle'
    //                     },
    //                     plotOptions: {
    //                         series: {
    //                             label: {
    //                                 connectorAllowed: false
    //                             },
    //                         }
    //                     },
    //                     xAxis:[{
    //                         categories:xd
    //                     }],
    //                     series: [{
    //                         name: '预测客流',
    //                         data: yd ,
    //                         zones:[{
    //                             value: 246,
    //                             color: '#90ed7d',
    //                         },
    //                             {
    //                                 value: 431,
    //                                 color: '#7cb5ec',
    //                             },
    //                             {
    //                                 value: 493,
    //                                 color: '#f7a35c'
    //                             },{
    //                                 color: 'red',
    //                                 dashStyle: 'dot'
    //                             },]}],
    //
    //                     responsive: {
    //                         rules: [{
    //                             condition: {
    //                                 maxWidth: 500
    //                             },
    //                             chartOptions: {
    //                                 legend: {
    //                                     layout: 'horizontal',
    //                                     align: 'center',
    //                                     verticalAlign: 'bottom'
    //                                 }
    //                             }
    //                         }]
    //                     }
    //
    //                 });
    //
    //             });
    //         })
    //         .catch(function (error) {
    //             console.log(error);
    //         });
    //
    // }
}
